To run:
On the CLI, run npm install
then:
to build the css run "grunt"
to watch the scss for changes then run compass "grunt watch"
to build everything run "grunt build" which will optimise everything and put it in build/


Notes:
-Base HTML is from HTML5 boilerplate (stripped down to what is necessary)
-Build system is grunt. after creating package.json I installed grunt and grunt modules via CLI using "npm install *** --save-dev"
-Logo provided had a red background so I swithed it to a white background
-the main westfield logo is first loaded as an svg so it is scalable and looks crisp on high DPI devices. if this fails (ie the device doesn't support svg it will load the normal jpg logo)
-The CSS is setup with compass and normalize. I considered using a framework but decided against it considering it's a small page and it will show my style better without a framework.
-to optimize for retina devices, css was used to make the plus/minus icons, and the view more arrow is a unicode symbol. This allows for resolution independant icons without the overhead of extra http requests with images. 
I could have also loaded the retailer logos at 2x size but with 1x dimensions in html but didnt not have time for this.
-HTML5 geolocation is used to find the user's nearest store. Once the user has selected a state the closest store will be expanded and a note will be displayed indicating this is the closest store. I did not implement any auto-scroll-to functionality, which may be useful if this was a real world page. I used an angular service for this https://github.com/arunisrael/angularjs-geolocation
-Big decision was to use flex-box for layout of tabs a search box. while not implemented in all browsers, its support is growing and provides a very powerful layout model which was useful for making the page responsive and changing the order of elements (ie making the search box go on top of the tabs when on mobile despite being last in the html). Once thing i didn't have time for was implementing a flexbox polyfil for older browsers. I used https://github.com/timhettler/compass-flexbox for flexbox mixins
-for the store deals container, I use max-height instead of height so it can be transitioned. 
-A big inefficiency of this page is that the url for the image for each deal has to be retrieved by individual API requests, as I could not see the retailer logo ref in the deals API call.
- I did not implement a placeholder polyfil for IE9
-I did not implement loading icons

